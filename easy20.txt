VALID PARENTHESIS

bool isValid(string s) {
        stack<char> st;
        int n = s.length();
        for (int i = 0; i < n; i++) {
            if ((s[i] == ')' || s[i] == '}' || s[i] == ']') && st.empty())
                return false;
            if (s[i] == '(')
                st.push('(');
            else if (s[i] == '{')
                st.push('{');
            else if (s[i] == '[')
                st.push('[');
            else if (s[i] == ')' && st.top() == '(')
                st.pop();
            else if (s[i] == ')' && (st.top() == '[' || st.top() == '{'))
                return false;
            else if (s[i] == '}' && st.top() == '{')
                st.pop();
            else if (s[i] == '}' && (st.top() == '[' || st.top() == '('))
                return false;
            else if (s[i] == ']' && st.top() == '[')
                st.pop();
            else if (s[i] == ']' && (st.top() == '(' || st.top() == '{'))
                return false;
        }
        if (st.empty())
            return true;
        return false;

